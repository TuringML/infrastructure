---
- hosts: localhost
  vars:
    state: present
    credentials_name: testing
  tasks:
    - name: Retrieve password for test
      command: op get vault {{ lookup('env', 'CLIENT_ID') }}
      ignore_errors: yes
      register: password_present
    - debug:
        msg: "{{ password_present.stdout }}"
    - name: Create vault if not exists
      shell: op create vault {{ lookup('env', 'CLIENT_ID') }}
      when: password_present.stdout == ""
    - name: Create login template
      shell: echo {{ lookup('template', './templates/one_password/create_login.json', convert_data=False) | to_json }} | op encode
      register: template_login
      vars:
        username: "hello-user"
        password: "super-secret"
    - name: Add new login item to vault
      shell: op create item login {{ template_login.stdout }} --title={{ credentials_name }} --vault={{ lookup('env', 'CLIENT_ID') }}
      when: password_present.stdout == ""
    - name: Get value from the vault with title
      shell: echo "{{ lookup('onepassword', credentials_name, field='username', vault=client_id) }}"
      register: username_value
      vars:
        client_id: "{{ lookup('env', 'CLIENT_ID') }}"
    - debug:
        msg: "{{ username_value.stdout }}"
    - name: Remove value from vault
      shell: op delete item {{ credentials_name }} --vault={{ lookup('env', 'CLIENT_ID') }}
      register: output_delete
    - debug:
        msg: "{{ output_delete }}"
    - name: Remove vault completely
      shell: op delete vault {{ lookup('env', 'CLIENT_ID') }}
